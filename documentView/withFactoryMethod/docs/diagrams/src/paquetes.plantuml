@startuml tictactoe
class usantatecla.tictactoe.ConsoleTicTacToe {

	~ ConsoleTicTacToe()
	- play()
	+ {static} main(String[])

}

class usantatecla.tictactoe.GraphicsTicTacToe {

	- GraphicsTicTacToe()
	- play()
	+ {static} main(String[])

}

class  usantatecla.tictactoe.TicTacToe{
- game: Game
- view: View
# TicTacToe()
# {abstract} createView(Game): View
# play(): void
}

usantatecla.tictactoe.TicTacToe <|-down- usantatecla.tictactoe.ConsoleTicTacToe
usantatecla.tictactoe.TicTacToe <|-down- usantatecla.tictactoe.GraphicsTicTacToe

class Game as "usantatecla.models.Game"
class consoleView as "usantatecla.tictactoe.views.console.ConsoleView"
class graphicsView as "usantatecla.tictactoe.views.graphics.GraphicsView"

usantatecla.tictactoe.ConsoleTicTacToe *-down-> Game
usantatecla.tictactoe.GraphicsTicTacToe *-down-> Game
usantatecla.tictactoe.ConsoleTicTacToe *-down-> consoleView
usantatecla.tictactoe.GraphicsTicTacToe *-down-> graphicsView
@enduml

@startuml tictactoe.views
class usantatecla.tictactoe.views.ErrorView {

	+ {static} String[] MESSAGES

	+ ErrorView(Error)

}

enum usantatecla.tictactoe.views.Message {
    + TITTLE
	+ NUMBER_PLAYERS
	+ SEPARATOR
	+ VERTICAL_LINE_LEFT
	+ VERTICAL_LINE_CENTERED
	+ VERTICAL_LINE_RIGHT
	+ ENTER_COORDINATE_TO_PUT
	+ ENTER_COORDINATE_TO_REMOVE
	+ COORDINATE_TO_PUT
	+ COORDINATE_TO_REMOVE
	+ COORDINATE_TO_MOVE
	+ PLAYER_WIN
	+ RESUME
	- String message;

	- Message(String)
	+ String getMessage()
	+ write()
	+ writeln()
	+ String toString()

}

class usantatecla.tictactoe.views.View {

	+ View(Game)
	+ interact()
	# {abstract} start()
	# {abstract} play()
	# {abstract} boolean isNewGame()

}

class Game as "usantatecla.tictactoe.models.Game"
class Console as "usantatecla.utils.Console"
class Error as "usantatecla.tictactoe.models.Error"

usantatecla.tictactoe.views.ErrorView *--> Error
usantatecla.tictactoe.views.View *--> Game
usantatecla.tictactoe.views.Message ..> Console
@enduml

@startuml tictactoe.views.console
class usantatecla.tictactoe.views.console.CoordinateView {

    + Coordinate read(String)

}

usantatecla.tictactoe.views.console.CoordinateView ..> usantatecla.tictactoe.views.console.ErrorView

class Coordinate as "usantatecla.tictactoe.models.Coordinate"
class Error as "usantatecla.tictactoe.models.Error"
class Console as "usantatecla.utils.Console"

usantatecla.tictactoe.views.console.CoordinateView ..> Console
usantatecla.tictactoe.views.console.CoordinateView ..> Error
usantatecla.tictactoe.views.console.CoordinateView ..> Coordinate

class usantatecla.tictactoe.views.console.ErrorView {

	~ ErrorView(Error)
	~ writeln()

}

class ErrorView as "usantatecla.tictactoe.views.ErrorView"

ErrorView <|-- usantatecla.tictactoe.views.console.ErrorView
usantatecla.tictactoe.views.console.ErrorView ..> Console
usantatecla.tictactoe.views.console.ErrorView *--> Error

class usantatecla.tictactoe.views.console.GameView {

    ~ GameView(Game)
	~ write()

}

class Game as "usantatecla.tictactoe.models.Game"
class Message as "usantatecla.tictactoe.views.Message"

usantatecla.tictactoe.views.console.GameView *--> Game
usantatecla.tictactoe.views.console.GameView ..> Coordinate
usantatecla.tictactoe.views.console.GameView ..> Message
usantatecla.tictactoe.views.console.GameView ..> usantatecla.tictactoe.views.console.TokenView

class usantatecla.tictactoe.views.console.SubView {

	~ SubView(Game)

}

usantatecla.tictactoe.views.console.SubView *--> Game

class usantatecla.tictactoe.views.console.PlayView {

    ~ interact()
    - put()
    - move()

}

usantatecla.tictactoe.views.console.SubView <|-- usantatecla.tictactoe.views.console.PlayView
usantatecla.tictactoe.views.console.PlayView ..> Coordinate
usantatecla.tictactoe.views.console.PlayView ..> Message
usantatecla.tictactoe.views.console.PlayView ..> Error
usantatecla.tictactoe.views.console.PlayView ..> usantatecla.tictactoe.views.console.ErrorView
usantatecla.tictactoe.views.console.PlayView ..> usantatecla.tictactoe.views.console.CoordinateView
usantatecla.tictactoe.views.console.PlayView ..> usantatecla.tictactoe.views.console.GameView
usantatecla.tictactoe.views.console.PlayView ..> usantatecla.tictactoe.views.console.TokenView

class usantatecla.tictactoe.views.console.ResumeView {

	~ boolean interact()

}

class YesNoDialog as "usantatecla.utils.YesNoDialog"

usantatecla.tictactoe.views.console.SubView <|-- usantatecla.tictactoe.views.console.ResumeView
usantatecla.tictactoe.views.console.ResumeView ..> Message
usantatecla.tictactoe.views.console.ResumeView ..> YesNoDialog

class usantatecla.tictactoe.views.console.StartView {

	~ interact()

}

class LimitedIntDialog as "usantatecla.utils.LimitedIntDialog"

usantatecla.tictactoe.views.console.SubView <|-- usantatecla.tictactoe.views.console.StartView
usantatecla.tictactoe.views.console.StartView ..> Message
usantatecla.tictactoe.views.console.StartView ..> LimitedIntDialog
usantatecla.tictactoe.views.console.StartView ..> usantatecla.tictactoe.views.console.GameView

class usantatecla.tictactoe.views.console.TokenView {

	+ {static} char[] SYMBOLS

	~ TokenView(Token)
	~ write()

}

class Token as "usantatecla.tictactoe.models.Token"

usantatecla.tictactoe.views.console.TokenView *--> Token
usantatecla.tictactoe.views.console.TokenView ..> Console

class usantatecla.tictactoe.views.console.ConsoleView {

	+ View(Game)

}

class View as "usantatecla.tictactoe.views.View"

View <|-- usantatecla.tictactoe.views.console.ConsoleView
usantatecla.tictactoe.views.console.ConsoleView *--> usantatecla.tictactoe.views.console.ResumeView
usantatecla.tictactoe.views.console.ConsoleView *--> usantatecla.tictactoe.views.console.PlayView
usantatecla.tictactoe.views.console.ConsoleView *--> usantatecla.tictactoe.views.console.StartView
@enduml

@startuml tictactoe.views.graphics
class usantatecla.tictactoe.views.graphics.ChoosePlayersView {

	- {static} ACCEPT: String 
	- label: JLabel
	- textField: JTextField
	- button: JButton
	- playersNumber: String 

	~ ChoosePlayersView(JRootPane)
	~ resetPlayersNumber()
	~ getPlayersNumber(): String 
	+ actionPerformed(ActionEvent)
	+ keyTyped(KeyEvent)
	+ keyPressed(KeyEvent)
	+ keyReleased(KeyEvent)

}

class ErrorView as "usantatecla.tictactoe.views.ErrorView"
class Coordinate as "usantatecla.tictactoe.models.Coordinate"




usantatecla.tictactoe.views.graphics.ChoosePlayersView ..> usantatecla.tictactoe.views.graphics.Constraints
usantatecla.tictactoe.views.graphics.ChoosePlayersView ..> ErrorView

class usantatecla.tictactoe.views.graphics.Constraints {

	~ Constraints(int, int, int, int)

}


class usantatecla.tictactoe.views.graphics.CoordinateMoveView extends usantatecla.tictactoe.views.graphics.CoordinateView {

    {static} ENTER_COORDINATE_TO_REMOVE: String 
	- labelRowToMove: JLabel 
    - labelColumnToMove: JLabel 
    - titleLabelToMove: JLabel 
    - textFieldRowToMove: JTextField
    - textFieldColumnToMove: JTextField
    - coordinates: Coordinate[] 

    ~ CoordinateMoveView()
    ~ resetCoordinates()
    ~ getCoordinates(): Coordinate[] 
    + actionPerformed(ActionEvent)

}

class Error as "usantatecla.tictactoe.models.Error"
class ErrorView as "usantatecla.tictactoe.views.ErrorView"


usantatecla.tictactoe.views.graphics.CoordinateMoveView ..> Error
usantatecla.tictactoe.views.graphics.CoordinateMoveView ..> ErrorView
usantatecla.tictactoe.views.graphics.CoordinateMoveView *--> "2" Coordinate

class usantatecla.tictactoe.views.graphics.CoordinatePutView extends usantatecla.tictactoe.views.graphics.CoordinateView {

	~ CoordinatePutView()
	~ resetCoordinate()
	~ Coordinate getCoordinate()
	+ actionPerformed(ActionEvent)
	+ keyTyped(KeyEvent)
	+ keyPressed(KeyEvent)
	+ keyReleased(KeyEvent)

}

class Coordinate as "usantatecla.tictactoe.models.Coordinate"

usantatecla.tictactoe.views.graphics.CoordinatePutView ..> ErrorView
usantatecla.tictactoe.views.graphics.CoordinatePutView *--> Coordinate

class usantatecla.tictactoe.views.graphics.CoordinateView  {

	# {static} String ENTER_COORDINATE_TO_PUT
	# {static} String ACCEPT
	# labelRow: JLabel 
	# labelColumn: JLabel 
	# titleLabel: JLabel 
	# textFieldRow: JTextField 
	# textFieldColumn: JTextField 
	# button: JButton 

	CoordinateView()
	+ {abstract} actionPerformed(ActionEvent)
	+ keyTyped(KeyEvent)
	+ keyPressed(KeyEvent)
	+ keyReleased(KeyEvent)
}


class usantatecla.tictactoe.views.graphics.GameView  {

    ~ GameView(Game)
    ~ write()
    - printRowBoard(int)
    - getSquareBoardText(int, int): String 

}

class Game as "usantatecla.tictactoe.models.Game"
class Token as "usantatecla.tictactoe.models.Token"
class Message as "usantatecla.tictactoe.views.Message"
class TokenView as "usantatecla.tictactoe.views.console.TokenView"

usantatecla.tictactoe.views.graphics.GameView *--> Game
usantatecla.tictactoe.views.graphics.GameView ..> Coordinate
usantatecla.tictactoe.views.graphics.GameView ..> Token
usantatecla.tictactoe.views.graphics.GameView ..> Message
usantatecla.tictactoe.views.graphics.GameView ..> Token
usantatecla.tictactoe.views.graphics.GameView ..> TokenView

class usantatecla.tictactoe.views.graphics.PlayView {

	~ {static} ENTER_COORDINATE_TO_PUT: String 
	~ {static} ENTER_COORDINATE_TO_REMOVE: String 

	~ PlayView(Game)
	~ interact()
	- put()
	- move()

}

usantatecla.tictactoe.views.graphics.PlayView ..> Coordinate
usantatecla.tictactoe.views.graphics.PlayView *--> Game
usantatecla.tictactoe.views.graphics.PlayView *--> usantatecla.tictactoe.views.graphics.GameView
usantatecla.tictactoe.views.graphics.PlayView *--> usantatecla.tictactoe.views.graphics.CoordinateMoveView
usantatecla.tictactoe.views.graphics.PlayView *--> usantatecla.tictactoe.views.graphics.CoordinatePutView
usantatecla.tictactoe.views.graphics.PlayView *--> ErrorView
usantatecla.tictactoe.views.graphics.PlayView *--> Message

class usantatecla.tictactoe.views.graphics.ResumeView {

	- newGame: boolean 

	~ ResumeView()
	~ isResumedGame(): boolean 

}

usantatecla.tictactoe.views.graphics.ResumeView ..> Message

class usantatecla.tictactoe.views.graphics.StartView  {

    ~ StartView(Game)
    ~ interact()

}

usantatecla.tictactoe.views.graphics.StartView *--> Game
usantatecla.tictactoe.views.graphics.StartView ..> Message
usantatecla.tictactoe.views.graphics.StartView ..> usantatecla.tictactoe.views.graphics.ChoosePlayersView
usantatecla.tictactoe.views.graphics.StartView ..> usantatecla.tictactoe.views.graphics.GameView

class usantatecla.tictactoe.views.graphics.GraphicsView extends View {

	+ View(GameView)

}

class View as "usantatecla.tictactoe.views.View"

usantatecla.tictactoe.views.graphics.GraphicsView *--> usantatecla.tictactoe.views.graphics.PlayView
usantatecla.tictactoe.views.graphics.GraphicsView *--> usantatecla.tictactoe.views.graphics.StartView
usantatecla.tictactoe.views.graphics.GraphicsView ..> usantatecla.tictactoe.views.graphics.ResumeView
@enduml

@startuml tictactoe.models
class  usantatecla.tictactoe.models.Board{
- tokens: Token[][] 
~ Board()
- Board(Board)
~ copy(): Board
~ Token getToken(Coordinate)
~ boolean isCompleted()
~ put(Coordinate, Token)
~ move(Coordinate, Coordinate)
~ isCompleted(Coordinate, Token): boolean
~ isOccupied(Coordinate, Token): boolean
~ isEmpty(Coordinate): boolean
~ isTicTacToe(Token): boolean
- getCoordinates(Token): List<Coordinate> 
+ equals(Object): boolean
}

class ClosedInterval as "usantatecla.utils.ClosedInterval"
class ConcreteCoordinate as "usantatecla.utils.ConcreteCoordinate"
class Direction as "usantatecla.utils.Direction"

usantatecla.tictactoe.models.Board *-down-> usantatecla.tictactoe.models.Coordinate
usantatecla.tictactoe.models.Board ..> usantatecla.tictactoe.models.Token
usantatecla.tictactoe.models.Board ..> usantatecla.tictactoe.models.Turn
usantatecla.tictactoe.models.Board ..> Direction

class  usantatecla.tictactoe.models.Coordinate{
- {static} NULL_COORDINATE: Coordinate 
+ {static} DIMENSION: int 
- {static} LIMITS: ClosedInterval 
+ Coordinate()
+ Coordinate(int, int)
+ isNull(): boolean 
+ isValid(): Error 
+ getDirection(Coordinate): Direction 
- inInverseDiagonal(): boolean 
+ random()
}
ConcreteCoordinate <|-down- usantatecla.tictactoe.models.Coordinate
usantatecla.tictactoe.models.Coordinate ..> usantatecla.tictactoe.models.Error
usantatecla.tictactoe.models.Coordinate ..> Direction
usantatecla.tictactoe.models.Coordinate ..> ClosedInterval

enum  usantatecla.tictactoe.models.Error{
+ NOT_EMPTY
+ NOT_OWNER
+ SAME_COORDINATES
+ WRONG_COORDINATES
+ NULL_ERROR
+ isNull(): boolean 
}

class  usantatecla.tictactoe.models.Game{
- board: Board 
- turn: Turn
+ Game()
+ reset()
+ setUsers(int)
+ isBoardComplete(): boolean 
+ isUser(): boolean 
+ put(Coordinate): Error 
+ move(Coordinate, Coordinate): Error 
- next()
+ isTicTacToe(): boolean 
+ getToken(Coordinate): Token 
+ getToken(): Token 
+ getMaxPlayers(): int 
+ equals(Object)
}
usantatecla.tictactoe.models.Game *-down-> usantatecla.tictactoe.models.Board
usantatecla.tictactoe.models.Game *-down-> usantatecla.tictactoe.models.Turn
usantatecla.tictactoe.models.Game ..> usantatecla.tictactoe.models.Coordinate
usantatecla.tictactoe.models.Game ..> usantatecla.tictactoe.models.Error

class  usantatecla.tictactoe.models.Player{
- token: Token 
- board: Board 
~ Player(Token, Board)
~ put(Coordinate): Error 
~ move(Coordinate, Coordinate): Error 
~ getToken(): Token 
+ copy(Board): Player
+ equals(Object)
}
usantatecla.tictactoe.models.Player *-down-> usantatecla.tictactoe.models.Token
usantatecla.tictactoe.models.Player *-down-> usantatecla.tictactoe.models.Board
usantatecla.tictactoe.models.Player ..> usantatecla.tictactoe.models.Coordinate
usantatecla.tictactoe.models.Player ..> usantatecla.tictactoe.models.Error

enum  usantatecla.tictactoe.models.Token{
+ X
+ O
+ NULL
+ isNull(): boolean 
+ {static} get(int): Token 
+ toString(): String
}

usantatecla.tictactoe.models.Token ..> ClosedInterval

class  usantatecla.tictactoe.models.Turn{
+ {static} NUM_PLAYERS: int 
- players: Player[] 
- board: Board 
- active: int 
- users: int 
~ Turn(Board)
+ Turn(Turn, Board)
+ copy(Board): Turn
~ setUsers(int)
~ set(int)
~ next()
~ isUser(): boolean 
~ put(Coordinate): Error 
~ getPlayer(): Player 
~ move(Coordinate, Coordinate): Error 
~ getToken(): Token 
}

usantatecla.tictactoe.models.Turn *-down-> usantatecla.tictactoe.models.Player
usantatecla.tictactoe.models.Turn ..down-> usantatecla.tictactoe.models.Board
usantatecla.tictactoe.models.Turn ..down-> usantatecla.tictactoe.models.Token
usantatecla.tictactoe.models.Turn ..down-> usantatecla.tictactoe.models.Coordinate
usantatecla.tictactoe.models.Turn ..down-> usantatecla.tictactoe.models.Error

@enduml

@startuml tictactoe.utils
class BufferedReader as "java.io.BufferedReader"{}

class  usantatecla.utils.ClosedInterval{
- min: int
- max: int
+ ClosedInterval(int,int)
+ isIncluded(int): boolean
+ toString(): String
}

class usantatecla.utils.ConcreteCoordinate{
# row: int
# column: int
- {static} ROW: String
- {static} COLUMN: String
# ConcreteCoordinate()
# ConcreteCoordinate(int,int)
+ isNull(): boolean
+ getDirection(Coordinate): Direction
+ inHorizontal(Coordinate): boolean
+ inVertical(Coordinate): boolean
+ inMainDiagonal(): boolean
# read(String)
+ getRow(): int
+ getColumn(): int
+ hashCode(): int
+ equals(Object): boolean
+ toString(): String
}

usantatecla.utils.Coordinate <|..down- usantatecla.utils.ConcreteCoordinate
usantatecla.utils.ConcreteCoordinate ..> usantatecla.utils.Direction
usantatecla.utils.ConcreteCoordinate ..> usantatecla.utils.Console


class usantatecla.utils.Console{
- {static} console: Console
+ {static} instance(): Console
- readString(String): String
+ readString(): String
+ readInt(String): int
~ readChar(String): char
+ writeln()
+ write(String)
+ write(int)
+ writeln(String)
+ writeln(int)
+ write(char)
- writeError(String)
}
usantatecla.utils.Console *-down-> BufferedReader

interface usantatecla.utils.Coordinate{
~ isNull(): boolean
~ getDirection(Coordinate): Direction
~ inHorizontal(Coordinate): boolean
~ inVertical(Coordinate): boolean
~ inMainDiagonal(): boolean
}
usantatecla.utils.Coordinate ..> usantatecla.utils.Direction

enum usantatecla.utils.Direction{
  VERTICAL
  HORIZONTAL
  MAIN_DIAGONAL
  INVERSE_DIAGONAL
  NULL
}

class usantatecla.utils.LimitedIntDialog{
- LIMITS: ClosedInterval
- {static} ERROR_MESSAGE: String
+ LimitedIntDialog(int,int)
+ read(String): int
}

usantatecla.utils.LimitedIntDialog *-down-> usantatecla.utils.ClosedInterval
usantatecla.utils.LimitedIntDialog ..> usantatecla.utils.Console

class usantatecla.utils.NullCoordinate{
- {static} instance: NullCoordinate
+ {static} instance(): Coordinate
+ isNull(): boolean
+ getDirection(Coordinate): Direction
+ inHorizontal(Coordinate): boolean
+ inVertical(Coordinate): boolean
+ inMainDiagonal(): boolean
+ hashCode(): int
+ equals(Object): boolean
+ toString(): String
}
usantatecla.utils.Coordinate <|..down- usantatecla.utils.NullCoordinate
usantatecla.utils.NullCoordinate ..> usantatecla.utils.Direction

class usantatecla.utils.YesNoDialog{
- {static} AFIRMATIVE: char
- {static} NEGATIVE: char
- {static} SUFFIX: String
- {static} MESSAGE: String
- answer: char
+ read(String): boolean
- isAffirmative(): boolean
- getAnswer(): char
- isNegative(): boolean
}
usantatecla.utils.YesNoDialog ..> usantatecla.utils.Console
@enduml