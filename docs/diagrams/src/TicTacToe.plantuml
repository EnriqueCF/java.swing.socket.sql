@startuml TicTacToe

title Secuencia versiones TicTacToe

state TicTacToe {

state domainModel{
[*] --> dm.basic

    state dm.basic
    note right: Clases del modelo del dominio\nacopladas con interfaz de consola
    note left of dm.basic #15D2F3
      Sencilla
    end note

    state dm.machine
    note right: Clases del modelo del dominio\nacopladas con interfaz de consola\nañadiendo un jugador máquina
    note left of dm.machine #15D2F3
      Básica
    end note
}

dm.basic --> dm.machine : Mantenimiento perfectivo

state dv.machine{
[*] --> dv.withPrototype
[*] --> dv.withDoubleDispatching
    state dv.withPrototype
    note right: Desacoplar modelos y vistas\nde las clases empleando\nel patrón Prototype
    note left of dv.withPrototype #15D2F3
      Básica
    end note

    state dv.withDoubleDispatching
    note right: Desacoplar modelos y vistas\nde las clases empleando\nel patrón Doble Despacho
    note left of dv.withDoubleDispatching #15D2F3
      Básica
    end note

    dv.withPrototype -->[*]
    dv.withDoubleDispatching-->[*]
}

state documentView {
    [*] --> dv.basic
    note left of dv.basic #15D2F3
      Sencilla
    end note
    state dv.basic
    note right: Clases Vistas de Texto separadas\nde los Modelos del Dominio pero con\nModelos de grano grueso con el\nadvenimiento de nueva funcionalidad.


    note left of withoutFactoryMethod #15D2F3
      Gráficos
    end note
    state withoutFactoryMethod
    note right:Clase Vistas de Interfaz Gráfica de Usuario\npero con DRY en Vistas de tecnologías\ndiferentes y con Modelos de grano grueso\ncon el advenimiento de nueva funcionalidad.

    note left of withFactoryMethod #15D2F3
      Gráficos
    end note
    state withFactoryMethod
    note right: Clase Vista abstracta para Open/Close de sus\ntecnologías pero con Modelos de grano grueso\ncon el advenimiento de nueva funcionalidad.


    dv.basic --> withoutFactoryMethod:Mantenimiento perfectivo
    withoutFactoryMethod --> withFactoryMethod:Mantenimiento correctivo
    withFactoryMethod-->[*]
}

dm.basic --> documentView:Mantenimiento correctivo
dm.machine-->dv.machine:Mantenimiento correctivo
documentView --> modelViewPresenter


state modelViewPresenter{
    [*] --> presentationModel
    [*] --> passiveView
    presentationModel-->[*]


    state presentationModel{
    [*] --> pm.basic

    state pm.basic
    note right:Clases Controladoras entre Vistas y Modelos por\ncada Caso de Uso pero con la clase Principal y las\nVistas acopladas a cada controlador actual y futuro.
    note left of pm.basic #15D2F3
      Gráficos
    end note

    note left of withFacade #15D2F3
      Gráficos
    end note
    state withFacade
    note right:Clase Lógica que encapsula Controladores y Modelos\npero con Vistas con DRY en la Lógica de Control.

    note left of withoutDoubleDispatching #15D2F3
      Gráficos
    end note
    state withoutDoubleDispatching
    note right:Clase Estado para la Inversión de Control de Vistas\na la Lógica pero violando el Principio de Sustitución\nde Liskov.

    note left of withDoubleDispatching #15D2F3
      Gráficos
    end note
    state withDoubleDispatching
    note right:Clase Vistador de Controladores para Técnica\nde Doble Despacho

    note left of withComposite #15D2F3
      UndoRedo
    end note
    state withComposite
    note right:Clase Comando del menú y Controlador Compuesto\nde ciertos Estados para Open/Close\ncon nuevos Casos de Uso.

    note left of withoutProxy #15D2F3
      ClienteServidor
    end note
    state withoutProxy
    note right:Clase TCP/IP para tecnología de Despliegue\npero con Controladores acoplados, poco cohesivos y\ngrano grueso con cada nueva tecnología.

    note left of withProxy #15D2F3
      ClienteServidor
    end note
    state withProxy
    note right:Clases Proxy para Open/Close para nuevas\ntecnologías de Despliegue.

    note left of withoutDAO #15D2F3
      Ficheros
    end note
    state withoutDAO
    note right:Clases Vistas y Controladores para la tecnología\nde persistencia pero con Modelos de grano grueso,\nbaja cohesión y alto acoplamiento a tecnologías\nde persistencia de ficheros.

    note left of withDAO #15D2F3
      Ficheros
    end note
    state withDAO
    note right: Patrón DAO

    note left of withoutPrototype #15D2F3
      BasesDatos
    end note
    state withoutPrototype
    note right:Nuevas Vistas y DAOS para la nueva tecnología\npero con clase Principal acoplada a las tecnologías\nactuales y futuras de persistencia.

    note left of withPrototype #15D2F3
      BasesDatos
    end note
    state withPrototype
    note right:Open/Close para arranque con configuración de persistencia


    pm.basic --> withFacade
    withFacade --> withoutDoubleDispatching
    withoutDoubleDispatching --> withDoubleDispatching
    withDoubleDispatching --> withComposite
    withComposite --> withoutProxy
    withoutProxy --> withProxy
    withProxy --> withoutDAO
    withoutDAO --> withDAO
    withDAO --> withoutPrototype
    withoutPrototype --> withPrototype
}

note left of passiveView #15D2F3
  Sencilla
end note
state passiveView
note right: Baile de la Triada.

note left of supervisorController #15D2F3
  Sencilla
end note
state supervisorController
note right: Baile de la Triada.

passiveView-->supervisorController
supervisorController-->[*]
}
modelViewPresenter --> modelViewController

state modelViewPresenter
 note left of modelViewController #15D2F3
  Sencilla
end note
state modelViewController
note right: Baile de la Triada.


modelViewController-->[*]
}
}

@enduml
